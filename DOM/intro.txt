DOM:Documents obj Model

The Document Object Model (DOM) is a programming interface for web documents. It represents the structure of a document (like HTML or XML) as a tree of objects, allowing developers to manipulate the content, structure, and style of a webpage dynamically.
Key Features of the DOM:
- Tree Structure: The DOM organizes a document as a tree, where each node represents an element, attribute, or text.
- Access and Manipulation: You can use JavaScript to access and modify elements, attributes, and styles in the DOM.
- Event Handling: The DOM allows you to attach event listeners to elements, enabling interactivity (e.g., responding to clicks or keypresses).


Common DOM Methods:
- Selecting Elements:
document.getElementById("id"); // Select by ID
document.querySelector(".class"); // Select by CSS selector

- Creating and Adding Elements:
const newElement = document.createElement("div");
document.body.appendChild(newElement);

- Modifying Content:
const element = document.getElementById("id");
element.textContent = "New Content";

- Handling Events:
element.addEventListener("click", () => {
  console.log("Element clicked!");
});

Practical Applications:
- Dynamically updating content (e.g., live scores, user input).
- Creating animations and effects.
- Building interactive forms and user interfaces.




